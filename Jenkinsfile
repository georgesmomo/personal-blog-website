// Jenkinsfile ‚Äî exemple p√©dagogique (site HTML statique)
pipeline {
    agent any   // ex√©cute sur n‚Äôimporte quel agent (ton instance Jenkins locale par ex.)

    stages {

        stage('Pr√©paration') {
            steps {
                echo "=== √âtape 1 : Pr√©paration du workspace ==="
                sh 'pwd'          // affiche le r√©pertoire courant
                sh 'ls -la'       // liste les fichiers du workspace Jenkins
            }
        }

        stage('Build (simulation)') {
            steps {
                echo "=== √âtape 2 : Construction du site (simulation) ==="
                // On simule la construction d‚Äôun site HTML statique
                sh '''
                    echo "Cr√©ation du dossier de build..."
                    mkdir -p dist
                    echo "<h1>Bienvenue sur mon site HTML g√©n√©r√© par Jenkins</h1>" > dist/index.html
                    echo "Build termin√© !"
                '''
            }
        }

        stage('Tests (fictifs)') {
            steps {
                echo "=== √âtape 3 : Tests ==="
                // On fait semblant de tester le site
                sh '''
                    echo "V√©rification de la pr√©sence du fichier index.html..."
                    if [ -f dist/index.html ]; then
                        echo "‚úÖ Test r√©ussi : index.html existe."
                    else
                        echo "‚ùå Test √©chou√© : index.html manquant."
                        exit 1
                    fi
                '''
            }
        }

        stage('D√©ploiement (simulation)') {
            steps {
                echo "=== √âtape 4 : D√©ploiement fictif ==="
                // Aucune vraie connexion ici, juste une simulation
                sh '''
                    echo "D√©ploiement du site dans le dossier /var/www/html (fictif)"
                    echo "Copie en cours..."
                    sleep 2
                    echo "D√©ploiement termin√© ! üöÄ"
                '''
            }
        }

    }

    post {
        success {
            echo "Pipeline termin√© avec succ√®s ‚úÖ"
        }
        failure {
            echo "Pipeline √©chou√© ‚ùå"
        }
        always {
            echo "Nettoyage du workspace..."
            sh 'rm -rf dist || true'
        }
    }
}
